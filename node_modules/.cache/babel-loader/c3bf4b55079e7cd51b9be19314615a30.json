{"ast":null,"code":"var _jsxFileName = \"/home/zimo/zimo-super-admin-frontend/src/pages/domain/EditDomain.js\";\nimport React, { useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { TextField } from '@mui/material';\nimport * as Apis from '../../context/Api';\nimport Info from '../../context/Info';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nexport default function EditDomain() {\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  useEffect(function () {\n    getDetails();\n  }, []);\n\n  var getDetails = function getDetails() {\n    var data = {\n      _id: id,\n      userId: Info.userInfo._id,\n      createdById: Info.userInfo._id,\n      companyId: Info.userInfo.companyId\n    };\n    axios.post(Apis.domainDetails(), data, {\n      headers: {\n        'x-access-token': Info.token\n      }\n    }).then(function (response) {\n      for (var item in formik.initialValues) {\n        formik.setFieldValue(item, response.data.data[item]);\n      }\n    });\n  };\n\n  var formik = useFormik({\n    initialValues: {\n      title: \"\",\n      userId: Info.userInfo._id,\n      description: \"\"\n    },\n    validationSchema: yup.object({\n      title: yup.string().max(30, \"Must be 30 characters or less\").required(\"Skill is required\"),\n      description: yup.string().min(10, \"Must be 10 characters or more\").required(\"Description is required\")\n    }),\n    onSubmit: function onSubmit(values) {\n      var Data = {\n        _id: id,\n        title: values.title,\n        description: values.description,\n        userId: Info.userInfo._id,\n        createdById: Info.userInfo._id,\n        companyId: Info.userInfo.companyId\n      };\n      axios.post(Apis.domainEdit(), Data, {\n        headers: {\n          'x-access-token': Info.token\n        }\n      }).then(function (response) {\n        if (response.data.code === 200) {\n          toast(response.data.message);\n          history.push('/domainList');\n        } else {\n          toast(response.data.message);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Domain \"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Enter skill\",\n    name: \"title\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }), formik.touched.title && formik.errors.title ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, formik.errors.title) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Multiline\",\n    multiline: true,\n    rows: 4,\n    variant: \"outlined\",\n    name: \"description\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.description,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }), formik.touched.description && formik.errors.description ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, formik.errors.description) : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/domainList\",\n    className: \"btn btn-danger m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Back\"))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/zimo/zimo-super-admin-frontend/src/pages/domain/EditDomain.js"],"names":["React","useEffect","useFormik","yup","TextField","Apis","Info","Link","ToastContainer","toast","axios","useHistory","useParams","EditDomain","history","id","getDetails","data","_id","userId","userInfo","createdById","companyId","post","domainDetails","headers","token","then","response","item","formik","initialValues","setFieldValue","title","description","validationSchema","object","string","max","required","min","onSubmit","values","Data","domainEdit","code","message","push","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\n\nimport { TextField } from '@mui/material'\nimport * as Apis from '../../context/Api'\nimport Info from '../../context/Info'\nimport { Link } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios'\nimport { useHistory, useParams } from 'react-router-dom'\n\nexport default function EditDomain() {\n    \n    \n    \n    let history=useHistory();\n    let {id}=useParams()\n\n\n\n    useEffect(\n        () => {\n            getDetails()\n        }, []\n    )\n\n    const getDetails = () => {\n        let data = {\n            _id: id,\n            userId:Info.userInfo._id,\n            createdById:Info.userInfo._id,\n            companyId: Info.userInfo.companyId\n        }\n        axios.post(Apis.domainDetails(), data,  {headers: {'x-access-token': Info.token}}).then((response) => {\n               \n             for (let item in formik.initialValues) {\n               formik.setFieldValue(item, response.data.data[item])\n                \n            }\n        })\n    };\n\n\n\n\n\n    const formik = useFormik({\n        initialValues: {\n            title: \"\",\n            \n            userId:Info.userInfo._id,\n            description: \"\"\n            \n        },\n\n        validationSchema: yup.object({\n            title: yup.string().max(30, \"Must be 30 characters or less\").required(\"Skill is required\"),\n            description: yup.string().min(10, \"Must be 10 characters or more\").required(\"Description is required\")\n        }),\n        \n        onSubmit: (values) => {\n            \n                let Data={\n                    _id:id,\n                    title:values.title,\n                    description:values.description,\n                    userId:Info.userInfo._id,\n                    createdById:Info.userInfo._id,\n                    companyId: Info.userInfo.companyId\n                }\n            \n            axios.post(Apis.domainEdit(), Data,  {headers: {'x-access-token': Info.token}}).then((response) => {\n                \n\n                if (response.data.code === 200) {\n                    toast(response.data.message);\n                    history.push('/domainList')\n\n\n                }\n                else {\n                    toast(response.data.message);\n                }\n            })\n        }\n\n    })\n\n\n    return (\n        <div className='container'>\n            <h1>Domain </h1>\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    label='Enter skill'\n                    name='title'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.title}\n                    type='text'\n                /><br/>\n                {formik.touched.title && formik.errors.title ? (\n                    <span className='text_error_message text-danger' >{formik.errors.title}</span>\n                ) : null}\n                <br/>\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"Multiline\"\n                    multiline\n                    rows={4}\n                    variant=\"outlined\"\n                    name='description'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.description}\n                    type='text'\n                /><br/>\n                {formik.touched.description && formik.errors.description ? (\n                    <span className='text_error_message text-danger' >{formik.errors.description}</span>\n                ) : null}\n                <div>\n\n                    <button type=\"submit\" className=\"btn btn-success\">Edit</button>\n\n                    <Link to=\"/domainList\" className=\"btn btn-danger m-3\">Back</Link>\n                </div>\n            </form>\n            <ToastContainer />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}