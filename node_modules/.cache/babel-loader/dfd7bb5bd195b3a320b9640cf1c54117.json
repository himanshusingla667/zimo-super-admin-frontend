{"ast":null,"code":"import _slicedToArray from \"/home/zimo/Zimo_Admin_Frontend/zimo-super-admin-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/zimo/Zimo_Admin_Frontend/zimo-super-admin-frontend/src/pages/company/AddCompany.js\";\nimport React, { useState } from 'react';\nimport { TextField } from '@mui/material';\nimport { useFormik } from 'formik';\nimport validation from '../../context/validation';\nimport axios, { Axios } from 'axios'; // import * as Apis from '../../enviornment/enviornment'\n\nimport * as Apis from '../../context/Api';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport Info from '../../context/Info';\nexport default function AddCompany() {\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      country = _useState2[0],\n      setcountry = _useState2[1];\n\n  var getData = function getData() {\n    var countryData = {\n      createdById: Info.userInfo._id\n    };\n    Axios.post(Apis.countryList(), countryData).then(function (response) {\n      setcountry(response.data.data);\n    });\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  var formik = useFormik({\n    initialValues: {\n      title: '',\n      email: '',\n      phoneNumber: '',\n      website: '',\n      address: '',\n      dateOfFoundation: '',\n      createdById: Info.userInfo._id,\n      userId: Info.userInfo._id\n    },\n    validationSchema: Yup.object({\n      title: Yup.string().max(30, 'Must be 30 characters or less').required(\"Enter Your title\").matches(validation.pattern.NAME, ' not valid').matches(validation.pattern.BACKSPACE, ' not valid'),\n      email: Yup.string().min(5, 'Enter valid email').required(\"Email is required \").matches(validation.pattern.EMAIL, 'Invalid').matches(validation.pattern.BACKSPACE, 'Invalid'),\n      phoneNumber: Yup.string().min(10, 'Enter valid number').required('Number is required').matches(validation.pattern.MOB_NO, 'Invalid').matches(validation.pattern.BACKSPACE, 'Invalid'),\n      website: Yup.string().min(5, 'Enter valid data').required('Website is required').matches(validation.pattern.EMAIL, 'Invalid').matches(validation.pattern.BACKSPACE, 'Invalid'),\n      address: Yup.string().min(5, 'enter valid address').required('Address is required').matches(validation.pattern.DESCRIPTION, 'invalid').matches(validation.pattern.BACKSPACE, 'invalid'),\n      dateOfFoundation: Yup.string().required('Date is requied').matches(validation.pattern.WHITESPACE, 'invalid')\n    }),\n    onSubmit: function onSubmit(value) {\n      submitData(value);\n    }\n  });\n\n  var submitData = function submitData(value) {\n    console.log(value);\n    axios.post(Apis.companyAdd(), value, {\n      headers: {\n        'x-access-token': Info.token\n      }\n    }).then(function (response) {\n      if (response.data.code === 200) {\n        toast(response.data.message);\n        history.push(\"companyList\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Name\",\n    name: \"title\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    type: \"title\",\n    className: \"d-flex m-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }), formik.touched.title && formik.errors.title ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, formik.errors.title) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email\",\n    name: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    type: \"email\",\n    className: \"d-flex m-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }, formik.errors.email) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Mobile\",\n    name: \"phoneNumber\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.phoneNumber,\n    type: \"email\",\n    className: \"d-flex m-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }), formik.touched.phoneNumber && formik.errors.phoneNumber ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, formik.errors.phoneNumber) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Website\",\n    name: \"website\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.website,\n    type: \"email\",\n    className: \"d-flex m-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }), formik.touched.website && formik.errors.website ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, formik.errors.website) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Address\",\n    name: \"address\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    multiline: true,\n    rows: 4,\n    value: formik.values.address,\n    type: \"text\",\n    className: \"d-flex m-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }), formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, formik.errors.address) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Date dd/mm/yyyy\",\n    name: \"dateOfFoundation\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    multiline: true,\n    rows: 4,\n    value: formik.values.dateOfFoundation,\n    type: \"text\",\n    className: \"d-flex m-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }), formik.touched.dateOfFoundation && formik.errors.dateOfFoundation ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }, formik.errors.dateOfFoundation) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/companyList\",\n    className: \"btn btn-danger m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, \"Back\"))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/home/zimo/Zimo_Admin_Frontend/zimo-super-admin-frontend/src/pages/company/AddCompany.js"],"names":["React","useState","TextField","useFormik","validation","axios","Axios","Apis","toast","ToastContainer","Link","useHistory","Yup","Info","AddCompany","history","country","setcountry","getData","countryData","createdById","userInfo","_id","post","countryList","then","response","data","useEffect","formik","initialValues","title","email","phoneNumber","website","address","dateOfFoundation","userId","validationSchema","object","string","max","required","matches","pattern","NAME","BACKSPACE","min","EMAIL","MOB_NO","DESCRIPTION","WHITESPACE","onSubmit","value","submitData","console","log","companyAdd","headers","token","code","message","push","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { TextField } from '@mui/material'\nimport { useFormik } from 'formik'\nimport validation from '../../context/validation'\nimport axios, { Axios } from 'axios'\n// import * as Apis from '../../enviornment/enviornment'\nimport * as Apis from '../../context/Api'\nimport { toast, ToastContainer } from 'react-toastify'\nimport { Link, useHistory } from 'react-router-dom'\nimport * as Yup from 'yup'\nimport Info from '../../context/Info'\n\nexport default function AddCompany() {\n\n\n    let history = useHistory();\n    const [country, setcountry]=useState([]);\n\n    let getData=()=>{\n        let countryData={\n            createdById:Info.userInfo._id,\n        } \n    \n        Axios.post(Apis.countryList(), countryData).then((response)=>{\n            setcountry(response.data.data)\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, [])\n\n    const formik = useFormik({\n        initialValues: {\n            title: '',\n            email: '',\n            phoneNumber: '',\n            website: '',\n            address: '',\n            dateOfFoundation: '',\n            createdById: Info.userInfo._id,\n            userId: Info.userInfo._id,\n        },\n        validationSchema: Yup.object({\n            title: Yup.string().max(30, 'Must be 30 characters or less').required(\"Enter Your title\")\n                .matches(validation.pattern.NAME, ' not valid')\n                .matches(validation.pattern.BACKSPACE, ' not valid'),\n\n            email: Yup.string().min(5, 'Enter valid email').required(\"Email is required \")\n                .matches(validation.pattern.EMAIL, 'Invalid')\n                .matches(validation.pattern.BACKSPACE, 'Invalid'),\n\n            phoneNumber: Yup.string().min(10, 'Enter valid number').required('Number is required')\n                .matches(validation.pattern.MOB_NO, 'Invalid')\n                .matches(validation.pattern.BACKSPACE, 'Invalid'),\n\n            website: Yup.string().min(5, 'Enter valid data').required('Website is required')\n                .matches(validation.pattern.EMAIL, 'Invalid')\n                .matches(validation.pattern.BACKSPACE, 'Invalid'),\n\n            address: Yup.string().min(5, 'enter valid address').required('Address is required')\n                .matches(validation.pattern.DESCRIPTION, 'invalid')\n                .matches(validation.pattern.BACKSPACE, 'invalid'),\n            \n            dateOfFoundation: Yup.string().required('Date is requied')\n                .matches(validation.pattern.WHITESPACE,'invalid')\n                \n\n        }),\n        onSubmit: (value) => {\n            submitData(value)\n        }\n    })\n\n\n    let submitData = (value) => {\n        console.log(value);\n\n        axios.post(Apis.companyAdd(), value, { headers: { 'x-access-token': Info.token } }).then((response) => {\n\n            if (response.data.code === 200) {\n                toast(response.data.message)\n                history.push(\"companyList\");\n            }\n\n        })\n    }\n\n\n\n    return (\n        <>\n            <div className=\"container\">\n\n\n\n                <form onSubmit={formik.handleSubmit}>\n                    <div className=\"row g-2 \">\n                        <div className=' col-md-6'>\n                            <TextField\n                                label='Name'\n                                name=\"title\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.title}\n                                type='title' className='d-flex m-4' />\n                            {formik.touched.title && formik.errors.title ? (\n                                <span className='text_error_message text-danger' >{formik.errors.title}</span>\n                            ) : null}\n                        </div>\n\n                        <div className='col-md-6'>\n                            <TextField\n                                label='Email'\n                                name=\"email\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.email}\n                                type='email' className='d-flex m-4' />\n                            {formik.touched.email && formik.errors.email ? (\n                                <span className='text_error_message text-danger' >{formik.errors.email}</span>\n                            ) : null}\n                        </div>\n                        <div className='col-md-6'>\n                            <TextField\n                                label='Mobile'\n                                name=\"phoneNumber\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.phoneNumber}\n                                type='email' className='d-flex m-4' />\n                            {formik.touched.phoneNumber && formik.errors.phoneNumber ? (\n                                <span className='text_error_message text-danger' >{formik.errors.phoneNumber}</span>\n                            ) : null}\n                        </div>\n                        <div className='col-md-6'>\n                            <TextField\n                                label='Website'\n                                name=\"website\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.website}\n                                type='email' className='d-flex m-4' />\n                            {formik.touched.website && formik.errors.website ? (\n                                <span className='text_error_message text-danger' >{formik.errors.website}</span>\n                            ) : null}\n                        </div>\n                        <div className='col-md-6'>\n                            <TextField\n                                label='Address'\n                                name=\"address\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                multiline\n                                rows={4}\n                                value={formik.values.address}\n                                type='text' className='d-flex m-4' />\n                            {formik.touched.address && formik.errors.address ? (\n                                <span className='text_error_message text-danger' >{formik.errors.address}</span>\n                            ) : null}\n                        </div>\n                        <div className='col-md-6'>\n                            <TextField\n                                label='Date dd/mm/yyyy'\n                                name=\"dateOfFoundation\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                multiline\n                                rows={4}\n                                value={formik.values.dateOfFoundation}\n                                type='text' className='d-flex m-4' />\n                            {formik.touched.dateOfFoundation && formik.errors.dateOfFoundation ? (\n                                <span className='text_error_message text-danger' >{formik.errors.dateOfFoundation}</span>\n                            ) : null}\n                        </div>\n                        \n\n                    </div>\n                    <div>\n\n                        <button type=\"submit\" className=\"btn btn-success\">Add</button>\n\n                        <Link to=\"/companyList\" className=\"btn btn-danger m-3\">Back</Link>\n                    </div>\n                </form>\n\n\n\n                <ToastContainer />\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}