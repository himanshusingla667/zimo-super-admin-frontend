{"ast":null,"code":"var _jsxFileName = \"/home/zimo/Zimo_Admin_Frontend/zimo-super-admin-frontend/src/pages/skills/EditSkills.js\";\nimport React, { useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { TextField } from '@mui/material';\nimport * as Apis from '../../context/Api';\nimport Info from '../../context/Info';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nexport default function EditSkils() {\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  useEffect(function () {\n    getDetails();\n  }, []);\n\n  var getDetails = function getDetails() {\n    var data = {\n      _id: id,\n      userId: Info.userInfo._id\n    };\n    axios.post(Apis.skillsDetails(), data, {\n      headers: {\n        'x-access-token': Info.token\n      }\n    }).then(function (response) {\n      for (var item in formik.initialValues) {\n        formik.setFieldValue(item, response.data.data[item]);\n      }\n    });\n  };\n\n  var formik = useFormik({\n    initialValues: {\n      title: \"\",\n      createdById: Info.userInfo._id,\n      userId: Info.userInfo.userId\n    },\n    validationSchema: yup.object({\n      title: yup.string().max(30, \"Must be 30 characters or less\").required(\"Skill is required\")\n    }),\n    onSubmit: function onSubmit(values) {\n      var Data = {\n        _id: id,\n        title: values.title\n      };\n      axios.post(Apis.skillsEdit(), Data, {\n        headers: {\n          'x-access-token': Info.token\n        }\n      }).then(function (response) {\n        if (response.data.code === 200) {\n          toast(response.data.message);\n          history.push('/SkillsList');\n        } else {\n          toast(response.data.message);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Skills \"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Enter skill\",\n    name: \"title\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), formik.touched.title && formik.errors.title ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, formik.errors.title) : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/SkillsList\",\n    className: \"btn btn-danger m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Back\"))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/zimo/Zimo_Admin_Frontend/zimo-super-admin-frontend/src/pages/skills/EditSkills.js"],"names":["React","useEffect","useFormik","yup","TextField","Apis","Info","Link","ToastContainer","toast","axios","useHistory","useParams","EditSkils","history","id","getDetails","data","_id","userId","userInfo","post","skillsDetails","headers","token","then","response","item","formik","initialValues","setFieldValue","title","createdById","validationSchema","object","string","max","required","onSubmit","values","Data","skillsEdit","code","message","push","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\n\nimport { TextField } from '@mui/material'\nimport * as Apis from '../../context/Api'\nimport Info from '../../context/Info'\nimport { Link } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios'\nimport { useHistory, useParams } from 'react-router-dom'\n\nexport default function EditSkils() {\n    \n    \n    \n    let history=useHistory();\n    let {id}=useParams()\n\n\n\n    useEffect(\n        () => {\n            getDetails()\n        }, []\n    )\n\n    const getDetails = () => {\n        let data = {\n            _id: id,\n            userId:Info.userInfo._id\n        }\n        axios.post(Apis.skillsDetails(), data,  {headers: {'x-access-token': Info.token}}).then((response) => {\n               \n             for (let item in formik.initialValues) {\n               formik.setFieldValue(item, response.data.data[item])\n                \n            }\n        })\n    };\n\n\n\n\n\n    const formik = useFormik({\n        initialValues: {\n            title: \"\",\n            createdById: Info.userInfo._id,\n            userId:Info.userInfo.userId,\n            \n        },\n\n        validationSchema: yup.object({\n            title: yup.string().max(30, \"Must be 30 characters or less\").required(\"Skill is required\")\n        }),\n        \n        onSubmit: (values) => {\n            \n                let Data={\n                    _id:id,\n                    title:values.title\n                }\n            \n            axios.post(Apis.skillsEdit(), Data,  {headers: {'x-access-token': Info.token}}).then((response) => {\n                \n\n                if (response.data.code === 200) {\n                    toast(response.data.message);\n                    history.push('/SkillsList')\n\n\n                }\n                else {\n                    toast(response.data.message);\n                }\n            })\n        }\n\n    })\n\n\n    return (\n        <div className='container'>\n            <h1>Skills </h1>\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    label='Enter skill'\n                    name='title'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.title}\n                    type='text'\n                />\n                {formik.touched.title && formik.errors.title ? (\n                    <span className='text_error_message text-danger' >{formik.errors.title}</span>\n                ) : null}\n                <div>\n\n                    <button type=\"submit\" className=\"btn btn-success\">Edit</button>\n\n                    <Link to=\"/SkillsList\" className=\"btn btn-danger m-3\">Back</Link>\n                </div>\n            </form>\n            <ToastContainer />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}