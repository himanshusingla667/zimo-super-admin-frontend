{"ast":null,"code":"import _slicedToArray from \"/home/zimo/zimo-super-admin-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/zimo/zimo-super-admin-frontend/src/pages/States/Addstate.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport Box from '@mui/material/Box';\nimport MenuItem from '@mui/material/MenuItem';\nimport { TextField } from '@mui/material';\nimport * as Apis from '../../context/Api';\nimport Info from '../../context/Info';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nexport default function Addstate() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      country = _useState2[0],\n      setcountry = _useState2[1];\n\n  useEffect(function () {\n    // console.log(Info);\n    countryData();\n  }, []);\n  var history = useHistory();\n\n  var countryData = function countryData() {\n    var data = {};\n    axios.post(Apis.countryList(), data).then(function (response) {\n      setcountry(response.data.data);\n    });\n  };\n\n  var formik = useFormik({\n    initialValues: {\n      title: \"\",\n      countryId: '',\n      createdById: Info.userInfo._id,\n      userId: Info.userInfo._id\n    },\n    validationSchema: yup.object({\n      title: yup.string().max(30, \"Must be 30 characters or less\").required(\" State is required\")\n    }),\n    onSubmit: function onSubmit(values) {\n      axios.post(Apis.stateAdd(), values, {\n        headers: {\n          'x-access-token': Info.token\n        }\n      }).then(function (response) {\n        if (response.data.code === 200) {\n          toast(response.data.message);\n          history.push('/Statelist');\n        } else {\n          toast(response.data.message);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \" States\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Enter Techknowlogy\",\n    name: \"title\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), formik.touched.title && formik.errors.title ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, formik.errors.title) : null), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      maxWidth: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    name: \"countryId\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.countryId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, country.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      value: item._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, item.title);\n  })))), formik.touched.departmentId && formik.errors.countryId ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \" \", formik.errors.countryId, \" \") : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/Techknowlogylist\",\n    className: \"btn btn-danger m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Back\"))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/zimo/zimo-super-admin-frontend/src/pages/States/Addstate.js"],"names":["React","useEffect","useState","useFormik","yup","InputLabel","Select","FormControl","Box","MenuItem","TextField","Apis","Info","Link","ToastContainer","toast","axios","useHistory","Addstate","country","setcountry","countryData","history","data","post","countryList","then","response","formik","initialValues","title","countryId","createdById","userInfo","_id","userId","validationSchema","object","string","max","required","onSubmit","values","stateAdd","headers","token","code","message","push","handleSubmit","handleChange","handleBlur","touched","errors","maxWidth","map","item","index","departmentId"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport Box from '@mui/material/Box';\nimport MenuItem from '@mui/material/MenuItem';\nimport { TextField } from '@mui/material'\nimport * as Apis from '../../context/Api'\nimport Info from '../../context/Info'\nimport { Link } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nexport default function Addstate() {\n\n    const [country ,setcountry]= useState([]);\n\n    useEffect(() => {\n        // console.log(Info);\n        countryData()\n    }, [])\n    let history = useHistory();\n\nconst countryData =() =>{\n    let data ={\n\n    }\n    axios.post(Apis.countryList(), data).then((response) => {\n        setcountry(response.data.data)\n    })\n}\n    const formik = useFormik({\n        initialValues: {\n            title: \"\",\n            countryId:'',\n            createdById: Info.userInfo._id,\n            userId: Info.userInfo._id,\n\n        },\n\n        validationSchema: yup.object({\n            title: yup.string().max(30, \"Must be 30 characters or less\").required(\" State is required\"),\n\n        }),\n\n        onSubmit: (values) => {\n            axios.post(Apis.stateAdd(), values, { headers: { 'x-access-token': Info.token } }).then((response) => {\n                if (response.data.code === 200) {\n                    toast(response.data.message);\n                    history.push('/Statelist')\n                }\n                else {\n                    toast(response.data.message);\n                }\n            })\n        }\n\n    })\n\n\n    return (\n        <div className='container'>\n            <h1> States</h1>\n            <form onSubmit={formik.handleSubmit}>\n            <div className=\"mt-4\">\n                <TextField\n                    label='Enter Techknowlogy'\n                    name='title'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.title}\n                    type='text'\n                />\n                {formik.touched.title && formik.errors.title ? (\n                    <span className='text_error_message text-danger' >{formik.errors.title}</span>\n                ) : null}\n              </div><br/>\n              <div>\n                    <Box sx={{ maxWidth: 200 }}>\n                    <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        name='countryId'\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.countryId}\n                    >\n                        {\n                            country.map((item, index) =>\n                                <MenuItem key={index} value={item._id}>{item.title}</MenuItem>\n                            )\n                        }\n                    </Select>\n                    </FormControl>\n                    </Box>\n                    {formik.touched.departmentId && formik.errors.countryId ? (\n                        <span className=\"text_error_message text-danger\"> {formik.errors.countryId} </span>\n                    ) : null}\n\n                </div>\n\n              \n                <div>\n                    <button type=\"submit\" className=\"btn btn-success\">Add</button>\n\n                    <Link to=\"/Techknowlogylist\" className=\"btn btn-danger m-3\">Back</Link>\n                </div>\n            </form>\n            <ToastContainer />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}