{"ast":null,"code":"var _jsxFileName = \"/home/zimo/zimo-super-admin-frontend/src/pages/ Technology/TechknowlogyEdit.js\";\nimport React, { useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { TextField } from '@mui/material';\nimport * as Apis from '../../context/Api';\nimport Info from '../../context/Info';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Spinner from '../../Components/spinner/Spinner';\nexport default function TechknowlogyEdit() {\n  useEffect(function () {\n    console.log(Info);\n  }, []);\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  useEffect(function () {\n    getDetails();\n  }, []);\n\n  var getDetails = function getDetails() {\n    var data = {\n      _id: id,\n      userId: Info.userInfo._id,\n      createdById: Info.userInfo._id,\n      companyId: Info.userInfo.companyId\n    };\n    axios.post(Apis.tecDetails(), data, {\n      headers: {\n        'x-access-token': Info.token\n      }\n    }).then(function (response) {\n      setspinner(false);\n\n      for (var item in formik.initialValues) {\n        formik.setFieldValue(item, response.data.data[item]);\n      }\n    });\n  };\n\n  var formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      userId: Info.userInfo._id\n    },\n    validationSchema: yup.object({\n      title: yup.string().max(30, \"Must be 30 characters or less\").required(\" Techknowlogy is required\")\n    }),\n    onSubmit: function onSubmit(values) {\n      var editData = {\n        userId: Info.userInfo._id,\n        title: values.title,\n        _id: id,\n        description: values.description,\n        createdById: Info.userInfo._id,\n        companyId: Info.userInfo.companyId\n      };\n      axios.post(Apis.tecEdit(), editData, {\n        headers: {\n          'x-access-token': Info.token\n        }\n      }).then(function (response) {\n        if (response.data.code === 200) {\n          toast(response.data.message);\n          history.push('/Techknowlogylist');\n        } else {\n          toast(response.data.message);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, spinner && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \" Technology\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Enter Technology\",\n    name: \"title\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), formik.touched.title && formik.errors.title ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, formik.errors.title) : null), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"description\",\n    multiline: true,\n    rows: 4,\n    variant: \"outlined\",\n    name: \"description\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.description,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }), formik.touched.description && formik.errors.description ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, formik.errors.description) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Edit Description\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/Techknowlogylist\",\n    className: \"btn btn-danger m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Back\"))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/zimo/zimo-super-admin-frontend/src/pages/ Technology/TechknowlogyEdit.js"],"names":["React","useEffect","useFormik","yup","TextField","Apis","Info","Link","ToastContainer","toast","axios","useHistory","useParams","Spinner","TechknowlogyEdit","console","log","history","id","getDetails","data","_id","userId","userInfo","createdById","companyId","post","tecDetails","headers","token","then","response","setspinner","item","formik","initialValues","setFieldValue","title","description","validationSchema","object","string","max","required","onSubmit","values","editData","tecEdit","code","message","push","spinner","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\n\nimport { TextField } from '@mui/material'\nimport * as Apis from '../../context/Api'\nimport Info from '../../context/Info'\nimport { Link } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios'\nimport { useHistory,useParams } from 'react-router-dom'\nimport Spinner from '../../Components/spinner/Spinner';\n\nexport default function TechknowlogyEdit() {\n\n    useEffect(() => {\n        console.log(Info);\n    }, [])\n    let history = useHistory();\n    let {id}=useParams()\n\n\n\n    useEffect(\n        () => {\n            getDetails()\n        }, []\n    )\n\n    const getDetails = () => {\n        let data = {\n            _id: id,\n            userId:Info.userInfo._id,\n            createdById:Info.userInfo._id,\n            companyId:Info.userInfo.companyId,\n\n        }\n        axios.post(Apis.tecDetails(), data,  {headers: {'x-access-token': Info.token}}).then((response) => {\n            setspinner(false)   \n             for (let item in formik.initialValues) {\n               formik.setFieldValue(item, response.data.data[item])\n                \n            }\n        })\n    };\n\n\n    const formik = useFormik({\n        initialValues: {\n            title: \"\",\n            description:\"\",\n            userId: Info.userInfo._id,\n\n        },\n\n        validationSchema: yup.object({\n            title: yup.string().max(30, \"Must be 30 characters or less\").required(\" Techknowlogy is required\")\n        }),\n\n        onSubmit: (values) => {\n            let editData={\n                userId: Info.userInfo._id,\n                title:values.title,\n                _id: id,\n                description:values.description,\n                createdById:Info.userInfo._id,\n                companyId:Info.userInfo.companyId,\n            }\n            axios.post(Apis.tecEdit(), editData, { headers: { 'x-access-token': Info.token } }).then((response) => {\n                if (response.data.code === 200) {\n                    toast(response.data.message);\n                    history.push('/Techknowlogylist')\n                }\n                else {\n                    toast(response.data.message);\n                }\n            })\n        }\n\n    })\n\n \n    return (\n\n       \n         \n        <div className='container'>\n             {\n            spinner && <Spinner />\n        }\n            <h1> Technology</h1>\n            <form onSubmit={formik.handleSubmit}>\n            <div className=\"mt-4\">\n                <TextField\n                    label='Enter Technology'\n                    name='title'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.title}\n                    type='text'\n                />\n                {formik.touched.title && formik.errors.title ? (\n                    <span className='text_error_message text-danger' >{formik.errors.title}</span>\n                ) : null}\n              </div><br/>\n                <div className=\"mt-4\">\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"description\"\n                    multiline\n                    rows={4}\n                    variant=\"outlined\"\n                    name='description'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.description}\n                    type='text'\n                /><br/>\n                {formik.touched.description && formik.errors.description ? (\n                    <span className='text_error_message text-danger' >{formik.errors.description}</span>\n                ) : null}\n                </div>\n                <div>\n                    <button type=\"submit\" className=\"btn btn-success\">Edit Description</button>\n\n                    <Link to=\"/Techknowlogylist\" className=\"btn btn-danger m-3\">Back</Link>\n                </div>\n            </form>\n            <ToastContainer />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}