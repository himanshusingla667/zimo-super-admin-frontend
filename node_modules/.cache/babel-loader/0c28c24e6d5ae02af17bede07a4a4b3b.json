{"ast":null,"code":"import _slicedToArray from \"/home/zimo/zimo-super-admin-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/zimo/zimo-super-admin-frontend/src/pages/States/StateEdit.js\";\nimport { InputLabel } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useFormik } from 'formik';\nimport { TextField } from '@material-ui/core';\nimport * as yup from 'yup';\nimport { useHistory, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../../Components/spinner/Spinner'; // import * as Apis from '../../enviornment/enviornment'\n\nimport MenuItem from '@mui/material/MenuItem';\nimport * as Apis from '../../context/Api';\nimport Info from '../../context/Info';\nimport Select from '@mui/material/Select';\nexport default function StateEdit() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      statelist = _useState2[0],\n      setstatelist = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      spinner = _useState4[0],\n      setspinner = _useState4[1];\n\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  useEffect(function () {\n    getData();\n    getDetails();\n  }, []);\n\n  var getData = function getData() {\n    var data = {\n      createdById: Info.userInfo._id\n    };\n    axios.post(Apis.countryList(), data).then(function (response) {\n      setstatelist(response.data.data);\n    });\n  };\n\n  var getDetails = function getDetails() {\n    var data = {\n      _id: id,\n      userId: Info.userInfo._id\n    };\n    axios.post(Apis.StateDetails(), data, {\n      headers: {\n        'x-access-token': Info.token\n      }\n    }).then(function (response) {\n      setspinner(false);\n      toast(response.data.message);\n\n      for (var item in formik.initialValues) {\n        formik.setFieldValue(item, response.data.data[item]);\n      }\n    });\n  };\n\n  var formik = useFormik({\n    initialValues: {\n      title: \"\",\n      createdById: Info.userInfo._id,\n      countryId: \"\"\n    },\n    validationSchema: yup.object({\n      title: yup.string().required(\"Title is required\")\n    }),\n    onSubmit: function onSubmit(values) {\n      var updateObj = {\n        _id: id,\n        title: values.title,\n        countryId: values.countryId,\n        userId: Info.userInfo._id\n      };\n      axios.post(Apis.StateEdit(), updateObj, {\n        headers: {\n          'x-access-token': Info.token\n        }\n      }).then(function (response) {\n        if (response.data.code === 200) {\n          toast(response.data.message);\n          history.push('/Statelist');\n        } else {\n          toast(response.data.message);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, spinner && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Edit State\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Enter State\",\n    name: \"title\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }\n  }), formik.touched.title && formik.errors.title ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \" \", formik.errors.title, \" \") : null), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    name: \"countryId\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.countryId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, statelist.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      value: item._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, item.title);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"Edit state\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/Statelist\",\n    className: \"btn btn-danger m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, \"Back\"))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/home/zimo/zimo-super-admin-frontend/src/pages/States/StateEdit.js"],"names":["InputLabel","React","useState","useEffect","ToastContainer","toast","useFormik","TextField","yup","useHistory","useParams","axios","Link","Spinner","MenuItem","Apis","Info","Select","StateEdit","statelist","setstatelist","spinner","setspinner","history","id","getData","getDetails","data","createdById","userInfo","_id","post","countryList","then","response","userId","StateDetails","headers","token","message","item","formik","initialValues","setFieldValue","title","countryId","validationSchema","object","string","required","onSubmit","values","updateObj","code","push","handleSubmit","handleChange","handleBlur","touched","errors","map","index"],"mappings":"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","sourcesContent":["import {  InputLabel} from '@material-ui/core'\nimport React, { useState, useEffect } from 'react'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useFormik } from 'formik'\nimport { TextField } from '@material-ui/core'\nimport * as yup from 'yup'\nimport { useHistory, useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport Spinner from '../../Components/spinner/Spinner';\n\n// import * as Apis from '../../enviornment/enviornment'\nimport MenuItem from '@mui/material/MenuItem';\nimport * as Apis from '../../context/Api'\nimport Info from '../../context/Info';\n\nimport Select from '@mui/material/Select';\n\n\nexport default function StateEdit() {\n    const [statelist, setstatelist] = useState([]);\n    const [spinner, setspinner] = useState(true)\n    const history = useHistory();\n\n    const {id} = useParams();\n    \n    useEffect(\n        () => {\n            getData()\n            getDetails()\n        }, []\n    )\n    const getData = () => {\n        let data = {\n            createdById: Info.userInfo._id\n        }\n        axios.post(Apis.countryList(), data).then((response) => {\n            setstatelist(response.data.data)\n            \n        })\n\n    };\n\n    const getDetails = () => {\n        let data = {\n            _id:id,\n            userId:Info.userInfo._id\n        }\n        axios.post(Apis.StateDetails(), data,{headers: {'x-access-token': Info.token}}).then((response) => {\n            setspinner(false)   \n            toast(response.data.message);\n            \n            for(let item in formik.initialValues){\n                formik.setFieldValue(item, response.data.data[item])\n            }\n\n        })\n\n    };\n    const formik = useFormik({\n        initialValues: {\n            title: \"\",\n            createdById: Info.userInfo._id,\n            countryId: \"\"\n\n\n        },\n\n        validationSchema: yup.object({\n            title: yup.string().required(\"Title is required\")\n        }),\n\n        onSubmit: (values) => {\n            let updateObj = {\n                _id:id,\n                title:values.title,\n                countryId:values.countryId,\n                userId:Info.userInfo._id\n            }\n            axios.post(Apis.StateEdit(),updateObj,{headers: {'x-access-token': Info.token}}).then((response) => {\n                \n    \n                if (response.data.code === 200) {\n                    toast(response.data.message);\n                    history.push('/Statelist')\n                    \n                    \n                }\n                else{\n                    toast(response.data.message);\n                }\n            })\n        }\n    });\n    return (\n    <>\n    {\n            spinner && <Spinner />\n        }\n         <div className=\"container\">\n            <h1>Edit State</h1>\n            <form onSubmit={formik.handleSubmit}>\n                <div className=\"position-relative\">\n                    <TextField\n                        label=\"Enter State\"\n                        name=\"title\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.title}\n                        type='text'\n                    /><br></br>\n                    {formik.touched.title && formik.errors.title ? (\n                        <span className=\"text_error_message text-danger\"> {formik.errors.title} </span>\n                    ) : null}\n                </div><br />\n                \n                <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    name='countryId'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.countryId}\n                >\n                    {\n                        statelist.map((item, index) =>\n                            <MenuItem key={index} value={item._id}>{item.title}</MenuItem>\n                        )\n                    }\n                </Select>\n                \n\n                <div><br />\n                    <button type=\"submit\" className=\"btn btn-danger\">Edit state</button>\n                    <Link to=\"/Statelist\" className=\"btn btn-danger m-3\">Back</Link>\n                </div>\n                \n            </form>\n            <ToastContainer />\n         </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}