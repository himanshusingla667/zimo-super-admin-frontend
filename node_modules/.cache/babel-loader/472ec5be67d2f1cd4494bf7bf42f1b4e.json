{"ast":null,"code":"import _slicedToArray from \"/home/zimo/zimo-super-admin-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/zimo/zimo-super-admin-frontend/src/pages/States/StateEdit.js\";\nimport { InputLabel, makeStyles } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useFormik } from 'formik';\nimport { TextField } from '@material-ui/core';\nimport * as yup from 'yup';\nimport { useHistory, useParams } from 'react-router-dom';\nimport axios from 'axios'; // import * as Apis from '../../enviornment/enviornment'\n\nimport MenuItem from '@mui/material/MenuItem';\nimport * as Apis from '../../context/Api';\nimport Info from '../../context/Info';\nimport Select from '@mui/material/Select';\nexport default function StateEdit() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      statelist = _useState2[0],\n      setstatelist = _useState2[1];\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  useEffect(function () {\n    getData(); // getDetails()\n  }, []);\n\n  var getData = function getData() {\n    var data = {\n      createdById: Info.userInfo._id\n    };\n    axios.post(Apis.countryList(), data).then(function (response) {\n      setstatelist(response.data.data);\n    });\n  }; // const getDetails = () => {\n  //     let data = {\n  //         _id:id,\n  //     }\n  //     axios.post(Apis.StateDetails(), data).then((response) => {\n  //         toast(response.data.message);\n  //         for(let item in formik.initialValues){\n  //             formik.setFieldValue(item, response.data.data[item])\n  //         }\n  //     })\n  // };\n\n\n  var useStyle = makeStyles({\n    container: {\n      width: '50%',\n      margin: '5% 0 0 25%',\n      '& > *': {\n        marginTop: 20\n      }\n    }\n  });\n  var formik = useFormik({\n    initialValues: {\n      title: \"\",\n      createdById: Info.userInfo._id,\n      countryId: \"\"\n    },\n    validationSchema: yup.object({\n      title: yup.string().required(\"Title is required\")\n    }),\n    onSubmit: function onSubmit(values) {\n      var updateObj = {\n        _id: id,\n        title: values.title,\n        countryId: values.countryId\n      };\n      axios.post(Apis.StateEdit(), updateObj).then(function (response) {\n        if (response.data.code === 200) {\n          toast(response.data.message);\n          history.push('/Statelist');\n        } else {\n          toast(response.data.message);\n        }\n      });\n    }\n  });\n  var history = useHistory();\n  var classes = useStyle();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Edit State\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Enter State\",\n    name: \"title\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 23\n    }\n  }), formik.touched.title && formik.errors.title ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, \" \", formik.errors.title, \" \") : null), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    name: \"countryId\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.countryId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, statelist.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      value: item._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, item.title);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, \"Edit state\"))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/zimo/zimo-super-admin-frontend/src/pages/States/StateEdit.js"],"names":["InputLabel","makeStyles","React","useState","useEffect","ToastContainer","toast","useFormik","TextField","yup","useHistory","useParams","axios","MenuItem","Apis","Info","Select","StateEdit","statelist","setstatelist","id","getData","data","createdById","userInfo","_id","post","countryList","then","response","useStyle","container","width","margin","marginTop","formik","initialValues","title","countryId","validationSchema","object","string","required","onSubmit","values","updateObj","code","message","history","push","classes","handleSubmit","handleChange","handleBlur","touched","errors","map","item","index"],"mappings":";;AAAA,SAAUA,UAAV,EAAsBC,UAAtB,QAAwC,mBAAxC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,KAAKC,IAAZ,MAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACEd,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,MACzBe,SADyB;AAAA,MACdC,YADc;;AAAA,mBAInBR,SAAS,EAJU;AAAA,MAIzBS,EAJyB,cAIzBA,EAJyB;;AAMhChB,EAAAA,SAAS,CACL,YAAM;AACFiB,IAAAA,OAAO,GADL,CAEF;AACH,GAJI,EAIF,EAJE,CAAT;;AAMA,MAAMA,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,QAAIC,IAAI,GAAG;AACPC,MAAAA,WAAW,EAAER,IAAI,CAACS,QAAL,CAAcC;AADpB,KAAX;AAGAb,IAAAA,KAAK,CAACc,IAAN,CAAWZ,IAAI,CAACa,WAAL,EAAX,EAA+BL,IAA/B,EAAqCM,IAArC,CAA0C,UAACC,QAAD,EAAc;AACpDV,MAAAA,YAAY,CAACU,QAAQ,CAACP,IAAT,CAAcA,IAAf,CAAZ;AAEH,KAHD;AAKH,GATD,CAZgC,CAuBhC;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;;;AAEA,MAAMQ,QAAQ,GAAG7B,UAAU,CACvB;AACI8B,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAE,KADA;AAEPC,MAAAA,MAAM,EAAE,YAFD;AAGP,eAAS;AACLC,QAAAA,SAAS,EAAE;AADN;AAHF;AADf,GADuB,CAA3B;AAYA,MAAMC,MAAM,GAAG5B,SAAS,CAAC;AACrB6B,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXd,MAAAA,WAAW,EAAER,IAAI,CAACS,QAAL,CAAcC,GAFhB;AAGXa,MAAAA,SAAS,EAAE;AAHA,KADM;AASrBC,IAAAA,gBAAgB,EAAE9B,GAAG,CAAC+B,MAAJ,CAAW;AACzBH,MAAAA,KAAK,EAAE5B,GAAG,CAACgC,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB;AADkB,KAAX,CATG;AAarBC,IAAAA,QAAQ,EAAE,kBAACC,MAAD,EAAY;AAClB,UAAIC,SAAS,GAAG;AACZpB,QAAAA,GAAG,EAACL,EADQ;AAEZiB,QAAAA,KAAK,EAACO,MAAM,CAACP,KAFD;AAGZC,QAAAA,SAAS,EAACM,MAAM,CAACN;AAHL,OAAhB;AAKA1B,MAAAA,KAAK,CAACc,IAAN,CAAWZ,IAAI,CAACG,SAAL,EAAX,EAA4B4B,SAA5B,EAAuCjB,IAAvC,CAA4C,UAACC,QAAD,EAAc;AAGtD,YAAIA,QAAQ,CAACP,IAAT,CAAcwB,IAAd,KAAuB,GAA3B,EAAgC;AAC5BxC,UAAAA,KAAK,CAACuB,QAAQ,CAACP,IAAT,CAAcyB,OAAf,CAAL;AACAC,UAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AAGH,SALD,MAMI;AACA3C,UAAAA,KAAK,CAACuB,QAAQ,CAACP,IAAT,CAAcyB,OAAf,CAAL;AACH;AACJ,OAZD;AAaH;AAhCoB,GAAD,CAAxB;AAuCA,MAAMC,OAAO,GAAGtC,UAAU,EAA1B;AACA,MAAMwC,OAAO,GAAGpB,QAAQ,EAAxB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEoB,OAAO,CAACnB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,IAAA,QAAQ,EAAEI,MAAM,CAACgB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,QAAQ,EAAEhB,MAAM,CAACiB,YAHrB;AAII,IAAA,MAAM,EAAEjB,MAAM,CAACkB,UAJnB;AAKI,IAAA,KAAK,EAAElB,MAAM,CAACS,MAAP,CAAcP,KALzB;AAMI,IAAA,IAAI,EAAC,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARN,EASKF,MAAM,CAACmB,OAAP,CAAejB,KAAf,IAAwBF,MAAM,CAACoB,MAAP,CAAclB,KAAtC,gBACG;AAAM,IAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAmDF,MAAM,CAACoB,MAAP,CAAclB,KAAjE,MADH,GAEG,IAXR,CADJ,eAaU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbV,eAeI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,eAgBI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,0BADZ;AAEI,IAAA,EAAE,EAAC,oBAFP;AAGI,IAAA,IAAI,EAAC,WAHT;AAII,IAAA,QAAQ,EAAEF,MAAM,CAACiB,YAJrB;AAKI,IAAA,MAAM,EAAEjB,MAAM,CAACkB,UALnB;AAMI,IAAA,KAAK,EAAElB,MAAM,CAACS,MAAP,CAAcN,SANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASQpB,SAAS,CAACsC,GAAV,CAAc,UAACC,IAAD,EAAOC,KAAP;AAAA,wBACV,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,KAAK,EAAED,IAAI,CAAChC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCgC,IAAI,CAACpB,KAA7C,CADU;AAAA,GAAd,CATR,CAhBJ,eAgCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,eACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAhCJ,CAFJ,eAwCI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCJ,CADJ;AA6CH","sourcesContent":["import {  InputLabel, makeStyles } from '@material-ui/core'\nimport React, { useState, useEffect } from 'react'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useFormik } from 'formik'\nimport { TextField } from '@material-ui/core'\nimport * as yup from 'yup'\nimport { useHistory, useParams } from 'react-router-dom'\nimport axios from 'axios'\n// import * as Apis from '../../enviornment/enviornment'\nimport MenuItem from '@mui/material/MenuItem';\nimport * as Apis from '../../context/Api'\nimport Info from '../../context/Info';\n\nimport Select from '@mui/material/Select';\n\n\nexport default function StateEdit() {\n    const [statelist, setstatelist] = useState([]);\n    \n\n    const {id} = useParams();\n    \n    useEffect(\n        () => {\n            getData()\n            // getDetails()\n        }, []\n    )\n    const getData = () => {\n        let data = {\n            createdById: Info.userInfo._id,\n        }\n        axios.post(Apis.countryList(), data).then((response) => {\n            setstatelist(response.data.data)\n            \n        })\n\n    };\n\n    // const getDetails = () => {\n    //     let data = {\n    //         _id:id,\n    //     }\n    //     axios.post(Apis.StateDetails(), data).then((response) => {\n            \n    //         toast(response.data.message);\n            \n    //         for(let item in formik.initialValues){\n    //             formik.setFieldValue(item, response.data.data[item])\n    //         }\n\n    //     })\n\n    // };\n\n    const useStyle = makeStyles(\n        {\n            container: {\n                width: '50%',\n                margin: '5% 0 0 25%',\n                '& > *': {\n                    marginTop: 20\n                }\n            }\n        }\n    )\n\n    const formik = useFormik({\n        initialValues: {\n            title: \"\",\n            createdById: Info.userInfo._id,\n            countryId: \"\"\n\n\n        },\n\n        validationSchema: yup.object({\n            title: yup.string().required(\"Title is required\")\n        }),\n\n        onSubmit: (values) => {\n            let updateObj = {\n                _id:id,\n                title:values.title,\n                countryId:values.countryId\n            }\n            axios.post(Apis.StateEdit(),updateObj).then((response) => {\n                \n    \n                if (response.data.code === 200) {\n                    toast(response.data.message);\n                    history.push('/Statelist')\n                    \n                    \n                }\n                else{\n                    toast(response.data.message);\n                }\n            })\n        }\n    });\n\n   \n\n\n\n    const history = useHistory();\n    const classes = useStyle();\n\n    return (\n        <div className={classes.container}>\n            <h1>Edit State</h1>\n            <form onSubmit={formik.handleSubmit}>\n                <div className=\"position-relative\">\n                    <TextField\n                        label=\"Enter State\"\n                        name=\"title\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.title}\n                        type='text'\n                    /><br></br>\n                    {formik.touched.title && formik.errors.title ? (\n                        <span className=\"text_error_message text-danger\"> {formik.errors.title} </span>\n                    ) : null}\n                </div><br />\n                \n                <InputLabel id=\"demo-simple-select-label\">Department</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    name='countryId'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.countryId}\n                >\n                    {\n                        statelist.map((item, index) =>\n                            <MenuItem key={index} value={item._id}>{item.title}</MenuItem>\n                        )\n                    }\n                </Select>\n                \n\n                <div><br />\n                    <button type=\"submit\" className=\"btn btn-danger\">Edit state</button>\n\n                </div>\n                \n            </form>\n            <ToastContainer />\n        </div>\n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}