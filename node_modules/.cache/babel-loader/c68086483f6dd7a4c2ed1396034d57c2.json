{"ast":null,"code":"var _jsxFileName = \"/home/zimo/zimo-super-admin-frontend/src/pages/States/StateEdit.js\";\nimport React, { useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport Box from '@mui/material/Box';\nimport MenuItem from '@mui/material/MenuItem';\nimport { TextField } from '@mui/material';\nimport * as Apis from '../../context/Api';\nimport Info from '../../context/Info';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nexport default function StateEdit() {\n  var _this = this;\n\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  useEffect(function () {\n    getDetails();\n  }, []);\n\n  var getDetails = function getDetails() {\n    var data = {\n      _id: id,\n      userId: Info.userInfo._id\n    };\n    axios.post(Apis.StateDetails(), data, {\n      headers: {\n        'x-access-token': Info.token\n      }\n    }).then(function (response) {\n      for (var item in formik.initialValues) {\n        formik.setFieldValue(item, response.data.data[item]);\n      }\n    });\n  };\n\n  var formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      createdById: Info.userInfo._id,\n      userId: Info.userInfo._id\n    },\n    validationSchema: yup.object({\n      title: yup.string().max(30, \"Must be 30 characters or less\").required(\" state is required\")\n    }),\n    onSubmit: function onSubmit(values) {\n      axios.post(Apis.StateEdit(), values, {\n        headers: {\n          'x-access-token': Info.token\n        }\n      }).then(function (response) {\n        if (response.data.code === 200) {\n          toast(response.data.message);\n          history.push('/Statelist');\n        } else {\n          toast(response.data.message);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \" Techknowlogy\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Enter state\",\n    name: \"title\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), formik.touched.title && formik.errors.title ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, formik.errors.title) : null), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      maxWidth: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    name: \"countryId\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.countryId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, country.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      value: item._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, item.title);\n  })))), formik.touched.departmentId && formik.errors.countryId ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, \" \", formik.errors.countryId, \" \") : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"Edit State\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/Techknowlogylist\",\n    className: \"btn btn-danger m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \"Back\"))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/zimo/zimo-super-admin-frontend/src/pages/States/StateEdit.js"],"names":["React","useEffect","useFormik","yup","InputLabel","Select","FormControl","Box","MenuItem","TextField","Apis","Info","Link","ToastContainer","toast","axios","useHistory","useParams","StateEdit","history","id","getDetails","data","_id","userId","userInfo","post","StateDetails","headers","token","then","response","item","formik","initialValues","setFieldValue","title","description","createdById","validationSchema","object","string","max","required","onSubmit","values","code","message","push","handleSubmit","handleChange","handleBlur","touched","errors","maxWidth","countryId","country","map","index","departmentId"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport Box from '@mui/material/Box';\nimport MenuItem from '@mui/material/MenuItem';\nimport { TextField } from '@mui/material'\nimport * as Apis from '../../context/Api'\nimport Info from '../../context/Info'\nimport { Link } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios'\nimport { useHistory,useParams } from 'react-router-dom'\n\nexport default function StateEdit() {\n\n    \n    let history = useHistory();\n    let {id}=useParams();\n\n\n\n    useEffect(\n        () => {\n            getDetails()\n        }, []\n    )\n\n    const getDetails = () => {\n        let data = {\n            _id: id,\n            userId:Info.userInfo._id\n        }\n        axios.post(Apis.StateDetails(), data,  {headers: {'x-access-token': Info.token}}).then((response) => {\n               \n             for (let item in formik.initialValues) {\n               formik.setFieldValue(item, response.data.data[item])\n                \n            }\n        })\n    };\n\n\n    const formik = useFormik({\n        initialValues: {\n            title: \"\",\n            description:\"\",\n            createdById: Info.userInfo._id,\n            userId: Info.userInfo._id,\n\n        },\n\n        validationSchema: yup.object({\n            title: yup.string().max(30, \"Must be 30 characters or less\").required(\" state is required\")\n        }),\n\n        onSubmit: (values) => {\n            axios.post(Apis.StateEdit(), values, { headers: { 'x-access-token': Info.token } }).then((response) => {\n                if (response.data.code === 200) {\n                    toast(response.data.message);\n                    history.push('/Statelist')\n                }\n                else {\n                    toast(response.data.message);\n                }\n            })\n        }\n\n    })\n\n \n    return (\n        <div className='container'>\n            <h1> Techknowlogy</h1>\n            <form onSubmit={formik.handleSubmit}>\n            <div className=\"mt-4\">\n                <TextField\n                    label='Enter state'\n                    name='title'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.title}\n                    type='text'\n                />\n                {formik.touched.title && formik.errors.title ? (\n                    <span className='text_error_message text-danger' >{formik.errors.title}</span>\n                ) : null}\n              </div><br/>\n              <div>\n                    <Box sx={{ maxWidth: 200 }}>\n                    <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        name='countryId'\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.countryId}\n                    >\n                        {\n                            country.map((item, index) =>\n                                <MenuItem key={index} value={item._id}>{item.title}</MenuItem>\n                            )\n                        }\n                    </Select>\n                    </FormControl>\n                    </Box>\n                    {formik.touched.departmentId && formik.errors.countryId ? (\n                        <span className=\"text_error_message text-danger\"> {formik.errors.countryId} </span>\n                    ) : null}\n\n                </div>\n                <div>\n                    <button type=\"submit\" className=\"btn btn-success\">Edit State</button>\n\n                    <Link to=\"/Techknowlogylist\" className=\"btn btn-danger m-3\">Back</Link>\n                </div>\n            </form>\n            <ToastContainer />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}