{"ast":null,"code":"var _jsxFileName = \"/home/zimo/zimo-super-admin-frontend/src/pages/country/AddCountry.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport validation from '../../context/validation';\nimport { TextField } from '@mui/material';\nimport * as Apis from '../../context/Api';\nimport Info from '../../context/Info';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nexport default function AddCountry() {\n  useEffect(function () {\n    console.log(Info);\n  }, []);\n  var history = useHistory();\n  var formik = useFormik({\n    initialValues: {\n      title: \"\",\n      createdById: Info.userInfo._id,\n      userId: Info.userInfo._id // token: Info.userInfo.jwtToken\n\n    },\n    validationSchema: yup.object({\n      title: yup.string().max(30, \"Must be 30 characters or less\").required(\"Skill is required\").matches(validation.pattern.NAME, 'Invalid').matches(validation.pattern.BACKSPACE, 'Invalid')\n    }),\n    onSubmit: function onSubmit(values) {\n      axios.post(Apis.countryAdd(), values, {\n        headers: {\n          'x-access-token': Info.token\n        }\n      }).then(function (response) {\n        if (response.data.code === 200) {\n          toast(response.data.message);\n          history.push('/countryList');\n        } else {\n          toast(response.data.message);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Country \"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Enter Country\",\n    name: \"title\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), formik.touched.title && formik.errors.title ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text_error_message text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, formik.errors.title) : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/countryList\",\n    className: \"btn btn-danger m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Back\"))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/zimo/zimo-super-admin-frontend/src/pages/country/AddCountry.js"],"names":["React","useEffect","useState","useFormik","yup","validation","TextField","Apis","Info","Link","ToastContainer","toast","axios","useHistory","AddCountry","console","log","history","formik","initialValues","title","createdById","userInfo","_id","userId","validationSchema","object","string","max","required","matches","pattern","NAME","BACKSPACE","onSubmit","values","post","countryAdd","headers","token","then","response","data","code","message","push","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React ,{useEffect, useState} from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\nimport validation from '../../context/validation'\nimport { TextField } from '@mui/material'\nimport * as Apis from '../../context/Api'\nimport Info from '../../context/Info'\nimport { Link } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\n\nexport default function AddCountry() {\n    \n\n    \n\n    useEffect(() => {\n        console.log(Info);\n    }, [])\n    let history=useHistory();\n    \n    const formik = useFormik({\n        initialValues: {\n            title: \"\",\n            createdById: Info.userInfo._id,\n            userId:Info.userInfo._id,\n            // token: Info.userInfo.jwtToken\n        },\n        \n        validationSchema: yup.object({\n            title: yup.string().max(30, \"Must be 30 characters or less\").required(\"Skill is required\")\n            .matches(validation.pattern.NAME,'Invalid')\n            .matches(validation.pattern.BACKSPACE,'Invalid')\n        }),\n        \n        onSubmit: (values) => {\n            axios.post(Apis.countryAdd(), values, {headers: {'x-access-token': Info.token}}).then((response) => {\n                if (response.data.code === 200) {\n                    toast(response.data.message);\n                    \n                    history.push('/countryList')\n                }\n                else {\n                    toast(response.data.message);\n                }\n            })\n        }\n\n    })\n\n\n    return (\n        <div className='container'>\n            \n            <h1>Country </h1>\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    label='Enter Country'\n                    name='title'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.title}\n                    type='text'\n                />\n                {formik.touched.title && formik.errors.title ? (\n                    <span className='text_error_message text-danger' >{formik.errors.title}</span>\n                ) : null}\n                <div>\n\n                    <button type=\"submit\" className=\"btn btn-success\">Add</button>\n\n                    <Link to=\"/countryList\" className=\"btn btn-danger m-3\">Back</Link>\n                </div>\n            </form>\n            <ToastContainer />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}